{"version":3,"sources":["mic.js","utils.js","tts.js","audio_detector.js","speech.js","index.js"],"names":["handleSuccess","f","stream","context","AudioContext","source","createMediaStreamSource","processor","createScriptProcessor","connect","destination","onaudioprocess","e","inputBuffer","getChannelData","navigator","mediaDevices","getUserMedia","audio","video","then","global_debug","log","console","set_debug","b","bug","tag","msg","i","length","debug","and","args","ret","array_and","arr","apply","avg","sum","multiply","rms","Math","sqrt","variance","_avg","pow","std","take","coll","num","Array","fill","arr_mult","x","map","y","perf","num_times","results","t0","performance","now","t1","arr_range","max","min","range","a","len","first","d","second","rest","slice","first_upper_case","s","charAt","toUpperCase","identity","last","zip_map","ks","vs","result","zip","xs","ys","dict_2_vec","k","push","number_or_self","val","Number","isNaN","d_map","dict_vals_2_num","diff","r","curr_max","curr_min","merge","Object","assign","cycle_array","v","shift","loop_fn","fn","l","get_series","field","std_percent_diff","tmp","NaN","array_percent_diff","a1","a2","array_log_diff","cv","cv_matrix","matrix","num_els","el_array","log_diff_half_buff","buff","split","ceil","fh","sh","spd_matrix","matrix_map","matrix_mapper","m","dom","document","createElement","set_inner_html","thang","HTMLElement","appendChild","innerHTML","flex_row","id_base","container","style","html","make_div_array","n","id","row","col","el","id_from_loc","c","test_div_array","toString","app_clear","app","getElementById","firstChild","removeChild","app_render","colors","get_colors","Date","getTime","click_id","assert","click","delay","ms","Promise","resolve","reject","setTimeout","get_ms","loop_until_true","rate","timeout","t_start","p","setInterval","t_now","clearInterval","map_indexed","merge_arrays","map_dict","dic","keys","assign_to_window","var_name","window","reload","location","set_difference","s1","s2","Set","has","add","get_logger","name","header","t","util","tts","speechSynthesis","speech_que","is_speaking","speaking","finished_speaking","speak","text","speech","stop_recognition","utterance","SpeechSynthesisUtterance","voice","getVoices","_","next","start_recognition","event_thresh","start","cb","last_rms","mic","buf","ws_port","send_text","connect_ws","ws","WebSocket","addEventListener","JSON","parse","data","type","send","stringify","recognition","webkitSpeechRecognition","continuous","interimResults","onstart","onsoundstart","onresult","event","resultIndex","transcript","onerror","onend","is_started","abort","start_audio_trigger","ad","vcs"],"mappings":"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","file":"vcs_client.map","sourceRoot":"..","sourcesContent":["//Sun Mar  3 11:36:55 PST 2019\n\n\nvar handleSuccess = function(f) { //f is the audio buffer handler\n    return function(stream) {\n\tvar context = new AudioContext();\n\tvar source = context.createMediaStreamSource(stream);\n\tvar processor = context.createScriptProcessor(1024, 1, 1);\n\n\tsource.connect(processor);\n\tprocessor.connect(context.destination);\n\n\tprocessor.onaudioprocess = function(e) {\n\t    f(e.inputBuffer.getChannelData(0))\n\t};\n    };\n}\n\nexport function connect(f) {  //f is the audio buffer handler \n    navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n\t.then(handleSuccess(f));\n}\n\n\n","//Tue Oct  2 18:06:09 PDT 2018\n//General JS utils file \n//would like to try creating soft?hard? links so that the utils files can be shared \n\n\nvar global_debug = true \n\nvar  log = console.log  \n\nfunction set_debug(b) {\n    global_debug = b \n} \n\n\n\nfunction bug(tag,...msg) { \n    if (global_debug) { \n\tconsole.log(\"<- \" + tag + \" ->\" )\n\tfor (var i = 0 ; i < msg.length ; i++) { \n\t    console.log(msg[i])\n\t}\n\tconsole.log(\"<- \" + tag + \" ->\" )\n    }\n}\n\nfunction debug(msg) { \n    if (global_debug) {\n\tconsole.log(msg) \n    }\n}\n\nfunction and(...args) { \n    var ret = true \n    for (var i=0;i<args.length;i++) { \n\tret =  ret && args[i]\n    }\n    return ret ? true : false \n} \n\nfunction array_and(arr) { \n    var ret = true \n    for (var i=0;i<arr.length;i++) { \n\tret =  ret && arr[i]\n    }\n    return ret ? true : false\n}\n\nfunction apply(f,args) { \n    return f.apply(null,args)\n}\n\nfunction avg(arr) { \n    var sum = 0;\n    for( var i = 0; i < arr.length; i++ ){\n\tsum += arr[i]\n    }\n    return sum/arr.length \n}\n\nfunction multiply(arr) { \n    var ret = 1 ; \n    for (var i =0; i < arr.length ; i++ ) { \n\tret *= arr[i]\n    }\n    return ret \n}\n\nfunction rms(arr) { \n    var sum = 0;\n    for( var i = 0; i < arr.length; i++ ){\n    \tsum += arr[i]*arr[i]\n    }\n    return Math.sqrt(sum/arr.length)\n}\n\nfunction variance(arr) { \n    var _avg = avg(arr)\n    var sum = 0 \n    for( var i = 0; i < arr.length; i++ ){\n\tsum += Math.pow(arr[i] - _avg, 2)\n    }\n    return sum/arr.length \n} \n\nfunction std(arr) { \n    return Math.sqrt(variance(arr))\n} \n\nfunction take(coll,num) { \n    var ret = Array(num).fill(0) \n    for (var i =0;i<num; i++) { \n\tret[i] = coll[i]\n    }\n    return ret \n} \n\nfunction arr_mult(arr,x) { \n    return arr.map( y => y /x ) \n}\n\nfunction perf(f) { \n    var num_times = 20000\n    var results = Array(num_times).fill(0) \n    for (i = 0 ; i < num_times ; i++ ) { \n\tvar t0 = performance.now();\n\tvar result = f() \n\tvar t1 = performance.now();\n\tresults[i] = t1 - t0 \n    } \n    return avg(results) \n} \n\nfunction arr_range(arr) { \n    return apply(Math.max, arr) - apply(Math.min, arr)\n}\n\nfunction range(a,b) { \n    var len = b - a \n    var ret = Array(len).fill(0)  ; \n    for (var i = 0 ; i< len ; i++) {  \n\tret[i] = a + i \n    }\n    return ret \n} \n\nfunction first(d) { \n    return d[0]\n} \n\nfunction second(d) { \n    return d[1]\n} \n\nfunction rest(d) {  d.slice(1) }    \n\nexport function first_upper_case(s) { \n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nexport function identity(x) { return x } \n\nfunction last(d) { \n    return d[d.length - 1 ] \n} \n\nfunction zip_map(ks,vs) { \n    var result = {} \n    for (var i = 0 ; i < ks.length; i ++ ) { \n\tresult[ks[i]] = vs[i]\n    }\n    return result\n}\n\nfunction zip(xs,ys) { \n    return xs.map(function(x,i) { \n\treturn [x, ys[i]]\n    }) \n}\n\nfunction dict_2_vec(d) { \n    var ret = [] ; \n    for (var k in d) { \n\tret.push([ k, d[k] ]) \n    } \n    return ret \n}\n\nfunction number_or_self(d) { \n    var val = Number(d) \n    if (isNaN(val)) {\n\treturn d \n    } else { \n\treturn val \n    } \n}\n\nfunction d_map(d,f) { \n    for (var k in d) {\n\td[k] = f(d[k])\n    }\n    return d \n}\n\nfunction dict_vals_2_num(d) { \n    return d_map(d,number_or_self) \n}\n\nfunction diff(d) { \n    var r =   Array(d.length - 1).fill(0) \n    for (var i = 1 ; i < d.length ; i ++ ) { \n\tr[i-1] = d[i] - d[i-1]\n    }\n    return r \n}\n\nfunction max(d) { \n    var curr_max = d[0] \n    \n    for (var i=1;i<d.length;i++) { \n\tif (d[i] > curr_max) { curr_max = d[i] }\n    } \n    \n    return curr_max \n} \n\nfunction min(d) { \n    var curr_min = d[0] \n    \n    for (var i=1;i<d.length;i++) { \n\tif (d[i] < curr_min) { curr_min = d[i] }\n    } \n    \n    return curr_min\n    \n} \n\nfunction merge(a,b) { \n    var result = Object.assign({},a,b)\n    return result\n}\n\nfunction cycle_array(a,v) { \n    a.push(v)\n    a.shift() \n    return a \n} \n\n\n\n\nfunction loop_fn(coll,fn,num) { \n    var l = coll.length\n    var ret = Array(l).fill(0) \n    for (var i=num ; i < l ; i ++) { \n\tret[i] = fn(coll.slice(i-num,i))\n    }\n    return ret \n} \n\n\n\n\n\nfunction get_series(coll , field) { \n    return coll.map(e=>e[field])\n}\n\n\n\n\nfunction std_percent_diff(arr) { \n    // Meant to be a magnitude normalized average derivative of an array \n    // calculates the vector of percentage differences (consecutive indeces) \n    // then gets the std of those \n    var tmp = Array(arr.length - 1 ).fill(NaN) \n    for (var i =0 ; i < tmp.length ; i ++ ) { \n\ttmp[i] =  (arr[i+1]-arr[i])/arr[i]\n    }\n    \n    return std(tmp)\n}\n\nfunction array_percent_diff(a1, a2 ) { \n    var ret = Array(a2.length).fill(0) \n    for (var i=0; i<ret.length; i++) { \n\tret[i] = (a2[i]-a1[i])/a1[i]\n    }\n    return ret \n} \n\nfunction array_log_diff(a1, a2 ) { \n    var ret = Array(a2.length).fill(0) \n    for (var i=0; i<ret.length; i++) { \n\tret[i] = Math.log(a2[i]) - Math.log(a1[i])\n    }\n    return ret \n} \n\nfunction cv(arr) { \n    return std(arr)/avg(arr)\n}\n\nfunction cv_matrix(matrix) { \n\n    let num_els = matrix[0].length \n    var result = Array(num_els).fill(null)\n    \n    for (var e =0; e < num_els ; e ++ ) { \n\tlet el_array = matrix.map( arr => arr[e]  ) \n\tresult[e] = cv(el_array)\n    }\n    \n    return result\n} \n\nfunction log_diff_half_buff(buff) { \n    //splits buffer in half, averages two halves, then calcs log diff of both halves \n    let split = Math.ceil(buff.length/2)  \n    let fh = take(buff,split) \n    let sh = buff.slice(-(buff.length - split))\n    return Math.log(avg(sh)) - Math.log(avg(fh))\n}\n\nfunction spd_matrix(matrix) { \n    // foo\n    let num_els = matrix[0].length \n    var result = Array(num_els).fill(null)\n    \n    for (var e =0; e < num_els ; e ++ ) { \n\tlet el_array = matrix.map( arr => arr[e]  ) \n\tresult[e] = std_percent_diff(el_array)\n    }\n    \n    return result\n} \n\nfunction matrix_map(matrix,f) { \n    let num_els = matrix[0].length \n    var result = Array(num_els).fill(null)\n    for (var e =0; e < num_els ; e ++ ) { \n\tlet el_array = matrix.map( arr => arr[e]  ) \n\tresult[e] = f(el_array)\n    }\n    return result\n} \n\nfunction matrix_mapper(f) { \n    return function(m) {return matrix_map(m,f)}\n} \n\n\n// define ui utilities now ------------> \n\nfunction dom(s) { \n    return document.createElement(s) \n} \n\nfunction set_inner_html(d,thang) { \n    if (thang instanceof HTMLElement) { \n\td.appendChild(thang) \n    } else { \n\td.innerHTML = thang \n    } \n    \n} \n\nfunction flex_row(num,id_base,f) { \n    var container, i \n    container = dom(\"div\")  \n    //container.className = \"flex-row\"  // see styles.css   \n    container.style = \"display : flex ; flex-wrap : nowrap ; flex-direction : row ; flex-grow : 1 \"\n        \n    for (i =0 ; i < num ; i ++ ) { \n\tvar d = dom(\"div\") \n\td.style = \"flex-grow : 1\"\n\tvar html = f(i,d) \n\tif (html) { \n\t    set_inner_html(d, html) \n\t} \n\tcontainer.appendChild(d) \n    } \n    return container  \n}\n\n\n/* \n * Create a flexbox of divs [m,n] in shape \n * @param {Function} f - accepts row, column, and HTMLelement. Can either mutate the el or return an new el (which will be appended to div at spot r,c) or return String (which will be set to innerHTML) \n */ \nfunction make_div_array(m,n,id_base,f) { \n    var container, i \n    \n    container = dom(\"div\")  \n    //container.className = \"flex-column\"  // see styles.css  \n    container.id = id_base \n    \n    container.style = \"width: 100% ; height : 100% ; display : flex ; flex-wrap : nowrap ; flex-direction : column \"\n    \n    // now we will add in the child elements \n    for (i =0 ; i < m ; i ++ ) { \n\t\n\t//f is a function which takes a row and column and element \n\t//build a function that takes just a col with row hard coded \n\t//and returns f(r,col)\n\tvar fn = function(col,el) {\n\t    return f(i,col,el) \n\t}\n\t\n\tvar new_id_base = id_base + \"_\" +  i + \",\" \n\tvar row = flex_row(n,new_id_base , fn )\n\tcontainer.appendChild(row) \n    }\n    \n    return container\n    \n\n} \n\nfunction id_from_loc(m,n,c) { \n    return c*m + n   // intersing that this function needs arg c, which is (static) number of cols \n}\n\nfunction test_div_array(m,n) { \n    var f = function(r,c,el) { \n\treturn (id_from_loc(r,c,n)).toString()\n    } \n\n    return make_div_array(m,n,\"foo\", f) \n    \n} \n\t\nfunction app_clear() { \n    var app = document.getElementById(\"app\");\n    while (app.firstChild) {\n\tapp.removeChild(app.firstChild);\n    }   \n}\n\nfunction app_render(el) { \n    app_clear() \n    var app = document.getElementById(\"app\")  \n    app.appendChild(el) \n}\n\nvar colors = [\"black\" , \"blue\" , \"red\" , \"green\" , \"yellow\" , \"orange\"]\n\nfunction get_colors(num) { \n    return take(colors, num) \n}\n\nfunction now() { \n    return (new Date()).getTime()    \n}\n///   extensions \n\n\n// Array.prototype.first = function(arr) { \n//     return arr[0] \n// }\n\n\nfunction click_id(id) {\n    let el = document.getElementById(id) \n    console.assert(el) \n    el.click() \n}\n\nfunction delay(ms) { \n    return new Promise( (resolve, reject) => { \n\tsetTimeout( function() { resolve(true) } , ms )\n    })\n}\n\nfunction get_ms() { \n    return new Date().getTime() \n}\n\nfunction loop_until_true(f,rate ,timeout) { \n    var t_start = get_ms() \n    let p = new Promise((resolve ,reject) =>   { \n\tlet id = setInterval( function(){ \n\t    let t_now  = get_ms() \n\t    if (f()) { \n\t\t//condition is met \n\t\tsetTimeout( function() {clearInterval(id)} , 1) \n\t\tresolve(false) \n\t    }  else { \n\t\tlet elapsed =  t_now - t_start\n\t\tif (elapsed  >= timeout ) { \n\t\t    setTimeout( function() {clearInterval(id)} , 1) \n\t\t    resolve(true) // reports an timeout\n\t\t}\n\t    }\n\t},rate) \n    }) \n    //return the promise now \n    return p\n}\n\nfunction map_indexed(arr,f) { \n    let ret = Array(arr.length).fill(null)\n    for (let i = 0; i < arr.length ; i ++ ) { \n\tret[i] = f(i,arr[i])\n    }\n    return ret \n}\n\nfunction merge_arrays(...args) { \n    let arr_1 = first(args) \n    \n}\n\nfunction map_dict(dic,f) { \n    //f is a function that takes \n    let ks = keys(dic) \n    let vs = ks.map(k=>dic[k])\n    \n    \n    \n}\n\nfunction assign_to_window(var_name, val) { \n    if (! window[var_name ] ) { \n\twindow[var_name] = val\n    } else { \n\t//log(\"Could not assign: \" + var_name ) \n\twindow[var_name] = val\n\tlog(\"(Re)Defining: \" + var_name ) \n    }\n} \n\nfunction reload() { \n    window.location  = window.location \n}\n\nexport function set_difference(s1,s2) { \n    let ret = new Set() \n    for (let el of s1 ) { \n\tif (!s2.has(el) ) {\n\t    ret.add(el)\n\t}\n    }\n    return ret   \n}\n\n\nexport function get_logger(name) { \n    let header = \"[\" + name + \"]:: \" \n    \n    let l = function(t,m) { \n\tif (typeof(m) == 'string' ) { \n\t    console[t](header + m)   //adds header if string\n\t}\n\telse { \n\t    console[t](header +\"~>\")       //if not prints header first \n\t    console[t](m)\n\t}\n    }\n\n    let i = function(m) { l(\"info\",m) } \n    let d = function(m) { l(\"debug\", m) } \n    \n    return { i, d } \n} \n\n\n\n\nexport { set_debug, bug, debug, and, array_and, apply, avg, multiply, rms, variance, std, take, arr_mult, perf, arr_range, range, first, second, last, zip_map, zip, dict_2_vec, number_or_self, d_map, dict_vals_2_num, diff, max, min, merge, cycle_array, loop_fn, get_series, std_percent_diff, array_percent_diff, array_log_diff, cv, cv_matrix, log_diff_half_buff, spd_matrix, matrix_map, matrix_mapper, dom, set_inner_html, flex_row, make_div_array, id_from_loc, test_div_array, app_clear, app_render, get_colors, now, click_id, delay, loop_until_true, assign_to_window}\n","//Sun Mar  3 16:01:13 PST 2019\nimport * as util from \"./utils.js\" \nimport * as speech from \"./speech.js\"\n\nlet log = util.get_logger(\"tts\") \n\nexport var tts = window.speechSynthesis;\nexport var speech_que = []\n\nexport function is_speaking() { \n    return tts.speaking\n}\n\nexport async function finished_speaking() {\n    let timeout = await util.loop_until_true(()=>!tts.speaking,200,1000*60)\n    return timeout \n}\n\nexport async function speak(text) { \n    if (! tts.speaking) { \n\tspeech.stop_recognition()\n\tvar utterance  = new SpeechSynthesisUtterance(text);\n\tutterance.voice = tts.getVoices()[49] \n\t//utterance.pitch = pitch.value;\n\tutterance.rate = 1.2;\n\ttts.speak(utterance); \n\tlet _ = await finished_speaking() \n\tlet next = speech_que.shift() \n\tif (next) { speak(next) } else { \n\t    speech.start_recognition()\n\t}\n    } else { \n\tlog.d(\"Scheduling speech for later.\")\n\tspeech_que.push(text)\n    }\n}\n\n\n\n","import * as mic from \"./mic.js\" \nimport * as util from \"./utils.js\" \nimport * as tts from \"./tts.js\"\n\n// params \nlet event_thresh = 5 //signal must double \n\n// -  \nexport function start(cb) { \n    var last_rms = 0.001 \n    let f = function(buf) { \n\tlet rms = util.rms(buf) \n\tif ( last_rms != 0 && ( rms  / last_rms ) > event_thresh && !tts.is_speaking() ) { \n\t    cb() \n\t}\n\tlast_rms = rms \n    }\n    mic.connect(f) \n}\n\n\n","import * as ad from \"./audio_detector.js\" \nimport {get_logger} from \"./utils.js\" \nimport * as tts from \"./tts.js\" \n\nlet log = get_logger(\"speech\") \n\n/* params  */ \nlet ws_port = 9001\nvar send_text = null \n\n/* create websocket for relaying speech info */\nexport function connect_ws() { \n    log.i(\"Connecting ws on port: \" + ws_port) \n    var ws = new WebSocket(\"ws://localhost:\"+ws_port) \n    ws.addEventListener('open' , ()=> log.i(\"WS connection opened\") ) \n    ws.addEventListener('message', (m)=> {\n\tlet msg = JSON.parse(m.data) \n\tlog.d(\"Got ws msg:\") ;\n\tlog.d(msg)\n\tif (msg.type == 'speak' ) { \n\t    tts.speak(msg.text) \n\t}\n    }) \n    send_text = function (text) { \n\tlet type = 'vcs_text' \n\tws.send(JSON.stringify({ type, text }) ) \n    } \n}\n    \n\n/* Create recognition object */ \nexport var recognition = new webkitSpeechRecognition();\nrecognition.continuous = true\nrecognition.interimResults = false\nrecognition.onstart = function() {\n    log.i(\"Recognition starting\") \n}\n    \nrecognition.onsoundstart = function() {\n    //log.d(\"Sound started.\")\n}\n\nrecognition.onresult = function(event) { \n    log.d(\"Got recognition result\") \n    log.d(event) \n    let text = event.results[event.resultIndex][0].transcript\n    send_text(text) \n}\nrecognition.onerror = function(event) { \n    log.d(\"Recognition error:\")\n    log.d(event) \n}\nrecognition.onend = function() {  \n    log.i(\"Recognition ended\")\n    is_started = false \n} \n\nvar is_started = false \nexport function start_recognition() {\n    if (!is_started) {\n\tlog.d(\"Starting recognition.\") \n\trecognition.start() \n\tis_started = true \n    } \n}\n\nexport function stop_recognition() { \n    recognition.abort()    \n    is_started = false \n}\n\n/* interface to tts */ \nasync function speak(text) { \n    \n}\n\n\n/* trigger recognition when audio is detected */ \nexport function start_audio_trigger() { \n    ad.start(start_recognition) \n}\n\n\n\n","import * as speech from \"./speech.js\" \nimport * as tts from \"./tts.js\" \n\n\n\nspeech.connect_ws() \nspeech.start_recognition() \nspeech.start_audio_trigger() \n\n\n\nwindow.vcs = {speech,tts} \n"]}